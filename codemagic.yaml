workflows:
  pre-check:
    name: Pre-check
    instance_type: mac_mini_m2
    environment:
      groups:
        - notification_emails
      flutter: stable
    triggering:
      events:
        - pull_request
      branch_patterns:
        - pattern: "**"
          include: true
          source: false
    when:
      changeset:
        includes:
          - '.'
        excludes:
          - '**/*.md' #Ignore md files
    cache:
      cache_paths:
        - ~/.gradle/caches
        - ~/.pub-cache
        - ios/Pods
        - $FLUTTER_ROOT/.pub-cache
    scripts:
      - name: Block skip-checks
        script: |
          # Fail if commit message contains "[skip ci]"
          if git log -1 --pretty=%B | grep -Eq "\[skip ci\]|\[ci skip\]"; then
            echo "❌ Skipping checks is not allowed!"
            exit 1
          fi
      - name: Clone and Checkout
        script: |
          git clone "$CM_REPO_URL" .
          git checkout "$CM_COMMIT"

      - name: Install Dependencies
        script: |
          flutter pub get

      - name: Run Code Analysis
        script: |
          echo "🛠️ Running Flutter analysis..."
          # Get the base commit (when the PR branched off the target branch)
          BASE_COMMIT=$(git merge-base HEAD origin/$CM_PULL_REQUEST_DEST)

          # Identify changed Dart files (lib/ and test/)
          CHANGED_DART_FILES=$(git diff --name-only $BASE_COMMIT HEAD -- "lib/*.dart" "test/*.dart")

          if [ -z "$CHANGED_DART_FILES" ]; then
          echo "✅ No Dart files modified. Skipping analysis."
          exit 0
          fi
          echo "🛠️ Analyzing changed files:"
          echo "$CHANGED_DART_FILES"
          flutter analyze --fatal-infos --fatal-warnings $CHANGED_DART_FILES
      - name: Run Changed Tests
        script: |
          # Find the common ancestor commit between source and target branches
          BASE_COMMIT=$(git merge-base HEAD origin/$CM_PULL_REQUEST_DEST)
          
          # Get changed test files since branching from target
          CHANGED_TESTS=$(git diff --name-only $BASE_COMMIT HEAD -- "test/*.dart")
          
          if [ -z "$CHANGED_TESTS" ]; then
            echo "✅ No test files modified. Skipping tests."
            exit 0
          fi
          echo "🔍 Running tests for changed files:"
          echo "$CHANGED_TESTS"
          flutter test $CHANGED_TESTS --update-goldens
    publishing:
      email:
        recipients:
          - $EMAIL_DANIEL
        notify:
          success: true
          failure: true
      slack:
        channel: '#build-notifications'
        notify_on_build_start: true
        notify:
          success: true
          failure: true
  comprehensive-check:
    name: Comprehensive Check
    environment:
      groups:
        - notification_emails
        - ripple_arc
      flutter: stable
    triggering:
      events:
        - pull_request
      branch_patterns:
        - pattern: "master"
          include: true
    cache:
      cache_paths:
        - ~/.gradle/caches
        - ~/.pub-cache
        - ios/Pods
        - $FLUTTER_ROOT/.pub-cache
        - /usr/local/Homebrew
        - /usr/local/bin/lcov
    scripts:
      - name: Clone and Checkout
        script: |
          git clone $CM_REPO_URL .
          git checkout $CM_COMMIT

      - name: Install Dependencies
        script: |
          flutter pub get

      - name: Run Code Analysis
        script: |
          echo "🛠️ Running Flutter analysis..."
          flutter analyze --fatal-infos --fatal-warnings .

      - name: Run Tests with Coverage
        script: |
          flutter test --coverage --update-goldens

      - name: Create coverage report
        script: |
          HOMEBREW_NO_AUTO_UPDATE=1 brew install lcov
          mkdir -p test-results 
          flutter test --coverage --machine > test-results/flutter.json  
          LCOV_VER=$(lcov --version)
          COVERAGE_PERCENT=$(lcov --summary ./coverage/lcov.info 2>&1 | grep 'lines......:' | awk '{print $2}' | sed 's/%//')
          
          echo "LCOV VERSION: ${LCOV_VER}% "
          echo "Code Coverage: ${COVERAGE_PERCENT}% "
          ls -la ./coverage
          if (( $(echo "$COVERAGE_PERCENT < $ARC_CODE_COVERAGE_TARGET" | bc -l) )); then
            echo "❌ Coverage is $COVERAGE_PERCENT%, below $ARC_CODE_COVERAGE_TARGET%"
            exit 1
          else
            echo "✅ Coverage is $COVERAGE_PERCENT% (>= $ARC_CODE_COVERAGE_TARGET%)"
          fi
        test_report: test-results/flutter.json

      - name: Mutation Testing
        script: |
          dart run mutation_test $(echo $(git diff --name-only HEAD HEAD~1 | grep -v "^test" | grep ".dart$" | tr '\n' ' ')) --rules=mutation_test_rules.xml

      - name: Build Android Debug
        script: |
          flutter build apk --debug

      - name: Build iOS Debug
        script: |
          flutter build ios --debug --no-codesign

    artifacts:
      - build/**/outputs/**/*.apk
      - build/ios/ipa/*.ipa
      - coverage/*
      - test-results/flutter.json
      - mutation-test-report/*
    publishing:
      email:
        recipients:
          - $EMAIL_DANIEL
        notify:
          success: true
          failure: true
      slack:
        channel: '#build-notifications'
        notify_on_build_start: true
        notify:
          success: true
          failure: true